# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-browsers-legacy

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run:
          name: Creating Dummy Artifacts
          command: |
            echo "$(pwd)/target" > /tmp/art-1;
            mkdir /tmp/artifacts;
            echo "$(pwd)/target" > /tmp/artifacts/art-2;

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn install

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn test
      - store_artifacts:
          path: /tmp/art-1
          destination: artifact-file
      - store_artifacts:
          path: /tmp/artifacts
## Use the latest 2.1 version of CircleCI pipeline process engine.
## See: https://circleci.com/docs/configuration-reference
#version: 2.1
#
## Define a job to be invoked later in a workflow.
## See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
#jobs:
#  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
#  build-and-test:
#    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
#    docker:
#      # Specify the version you desire here
#      # See: https://circleci.com/developer/images/image/cimg/openjdk
#      - image: cimg/openjdk:11.0
#
#    # Add steps to the job
#    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
#    steps:
#      # Checkout the code as the first step.
#      - checkout
#
#      # Use mvn clean and package as the standard maven build phase
#      - run:
#          name: Build
#          command: mvn -B -DskipTests clean package
#      # Then run your tests!
#      - run:
#          name: Test
#          command: mvn test
#
## Orchestrate jobs using workflows
## See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
#workflows:
#  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
#    # Inside the workflow, you define the jobs you want to run.
#    jobs:
#      - build-and-test